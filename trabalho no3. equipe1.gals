#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
Package = parte3
ScannerCaseSensitive = false
ScannerTable = Compact
Input = String
Parser = LL
#RegularDefinitions
inteira: 0|[1-9][0-9]*
fracionaria: 0|[0-9]*[1-9]
#Tokens
: [\r\s\n\t]

//letra A

id: [a-zA-Z](_?[a-zA-Z0-9]+)*_?

//letra B

cint: 0|[1-9][0-9]*

//letra C

cfloat: {inteira}\.{fracionaria}

//letra D

cbin: #b(0|1)+

//letra E

chexa: #h([0-9]|a|b|c|d|e|f)+
//letra F

cstr: \"[^\"\n\\]*\"

//letra G

:! \?[^\n]*

// letra H

:! &\-([^\-]|\-+[^&\-])*\-+& //reconhecido e ignorado

//palavras reservadas

bin = id: "bin" 
bool = id: "bool" 
elif = id: "elif"
else = id: "else"
endif = id: "endif"
false = id: "false"
float = id: "float"
hexa = id: "hexa"
if = id: "if"
int = id: "int"
input = id: "input"
main = id: "main"
output = id: "output"
str = id: "str" 
toInt = id: "toInt"
toBin = id: "toBin"
toHexa = id: "toHexa"
true = id: "true"
repeat = id: "repeat"
until = id: "until"

//sïmbolos especiais

"+"
"-"
"*"
"/"
"," 
"." 
";" 
"=" 
":"
"("
")"
"&"
"|"
"!"
"=="
"!="
"<"
">"
"+"
"-"
"*"
"/"
#NonTerminals
<programa> //primeiro
<declaracao_variaveis>
<lista_variaveis1>
<lista_variaveis2>
<lista_comandos>
<comando>
<atribuicao> 
<entrada_dados> 
<saida_dados> 
<cmd_selecao>
<cmd_repeticao>
<lista_variaveis>
<lista_id>
<lista_id1>
<tipo>
<valor>
<expressao>
<condicoes>
<else>
<lista_expressoes>
<lista_expressoes1>


<elemento>
<expressao_>
<relacional>
<aritmetica>
<relacional_>
<operador_relacional>
<termo>
<aritmetica_>
<fator>
<termo_>
<membro>
<membro_>
<membro__>

<comando_>











#Grammar
<programa> ::= <declaracao_variaveis> main <lista_comandos> ;

//<lista_comandos> ::= <comando> ";" | <comando> ";" <lista_comandos> ;

<lista_comandos> ::= <comando> ";" <comando_> ;

<comando_> ::= <lista_comandos> | î ;

<comando> ::= <atribuicao> | <entrada_dados> | <saida_dados> | <cmd_selecao> | <cmd_repeticao>;

<declaracao_variaveis> ::= <lista_variaveis> | î;

<lista_variaveis> ::= <lista_id> ":" <tipo> <lista_variaveis1> ;
<lista_variaveis1> ::=  ";" <lista_variaveis2> | "=" <valor> ";" <lista_variaveis2> ;
<lista_variaveis2> ::= <lista_variaveis> | î ;

<lista_id> ::= id <lista_id1> ;
<lista_id1> ::= "," <lista_id> | î ;

<tipo> ::= int | float | bin | hexa | bool | str;

<valor> ::= cint | cfloat | cbin | chexa | true | false | cstr;

<atribuicao> ::= <lista_id> "=" <expressao>;

<entrada_dados> ::= input "(" <lista_id> ")";

<saida_dados> ::= output "(" <lista_expressoes> ")";

<lista_expressoes> ::= <expressao> <lista_expressoes1> ;
<lista_expressoes1> ::= "," <lista_expressoes> | î ;

<cmd_selecao> ::= if <expressao> ":" <lista_comandos> <condicoes> <else> endif;
 
<condicoes> ::= elif <expressao> ":" <lista_comandos> <condicoes> | î; 

<else> ::= else <lista_comandos> | î;

<cmd_repeticao> ::= repeat <lista_comandos> until <expressao>;




<expressao> ::= <elemento> <expressao_> ;
 
<expressao_> ::= î | "&" <elemento> <expressao_> | "|" <elemento> <expressao_> ; 
<elemento> ::= <relacional> | true | false | "!" <elemento> ; 
<relacional> ::= <aritmetica> <relacional_> ; 
<relacional_> ::= î | <operador_relacional> <aritmetica> ; 
<operador_relacional> ::= "==" | "!=" | "<" | ">" ; 
<aritmetica> ::= <termo> <aritmetica_> ; 
<aritmetica_> ::= î | "+" <termo> <aritmetica_> | "-" <termo> <aritmetica_> ; 
<termo> ::= <fator> <termo_> ; 
<termo_> ::= î | "*" <fator> <termo_> | "/" <fator> <termo_> ; 
<fator> ::= <membro> <membro_> ; 
<membro> ::= id | 
 cint | 
 cfloat | 
 cbin | 
 chexa | 
 cstr | 
 "(" <expressao> ")" | 
 "+" <membro> | 
 "-" <membro> ; 
<membro_> ::= î | "." <membro__> ; 
<membro__> ::= toInt | toBin | toHexa ; 

